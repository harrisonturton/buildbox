"""Build server"""

module(name = "build-server")

# Dependencies from the local registry

bazel_dep(name = "google_apis_bep", version = "0.0.1")
bazel_dep(name = "google_apis_bes", version = "0.0.1")
bazel_dep(name = "google_apis_core", version = "0.0.1")
bazel_dep(name = "google_apis_proto", version = "0.0.1")
bazel_dep(name = "google_apis_rbe", version = "0.0.1")

# Dependencies from the Bazel Central registry

bazel_dep(name = "apple_support", version = "1.17.1")
bazel_dep(name = "rules_proto", version = "6.0.2")
bazel_dep(name = "rules_rust", version = "0.57.1")
bazel_dep(name = "rules_rust_prost", version = "0.57.1")
bazel_dep(name = "toolchains_protoc", version = "0.3.1")

# Rust toolchain

rust = use_extension("@rules_rust//rust:extensions.bzl", "rust")

rust.toolchain(
    edition = "2021",
    versions = ["1.84.0"],
)

use_repo(rust, "rust_toolchains")
register_toolchains("@rust_toolchains//:all")

# Rust analyzer

rust_analyzer_dependencies = use_repo_rule("@rules_rust//tools/rust_analyzer:deps.bzl", "rust_analyzer_dependencies")
rust_analyzer_dependencies(name = "deps")

# Rust crates

register_toolchains("//tools/bazel/toolchains/prost:prost_toolchain")

crate = use_extension(
    "@rules_rust//crate_universe:extension.bzl",
    "crate",
    isolate = True,
)

crate.spec(
    package = "clap",
    version = "4.5",
    features = ["derive"],
)

crate.spec(
    package = "bytes",
    version = "1.7",
)

crate.spec(
    package = "tracing",
    version = "0.1",
)

crate.spec(
    package = "tracing-subscriber",
    version = "0.3",
)

crate.spec(
    package = "thiserror",
    version = "1.0",
)

crate.spec(
    package = "rusqlite",
    version = "0.33.0",
    features = ["bundled", "chrono", "blob"],
)

# Rust gRPC and proto dependencies

crate.spec(
    package = "tokio",
    version = "1",
    features = ["full"],
)

crate.spec(
    package = "tokio-stream",
    version = "0.1",
    features = ["full"],
)

crate.spec(
    package = "prost",
    version = "0.13",
)

crate.spec(
    default_features = False,
    package = "prost-types",
    version = "0.13",
)

crate.spec(
    package = "tonic",
    features = ["transport", "tls"],
    version = "0.12",
)

crate.spec(
    package = "protoc-gen-prost",
    version = "0.4",
)

crate.annotation(
    crate = "protoc-gen-prost",
    gen_binaries = ["protoc-gen-prost"],
)

crate.spec(
    package = "protoc-gen-tonic",
    version = "0.4",
)

crate.annotation(
    crate = "protoc-gen-tonic",
    gen_binaries = ["protoc-gen-tonic"],
)

crate.from_specs(
    generate_binaries = True,
)

use_repo(crate, "crates")
